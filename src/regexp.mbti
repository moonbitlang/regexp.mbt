package "peter-jerry-ye/regexp"

import(
  "moonbitlang/core/string"
)

// Values
fn compile(@string.StringView) -> Engine!Error_

// Types and methods
type Engine
fn Engine::execute(Self, @string.StringView) -> Array[Int]

pub enum Err {
  InternalError
  InvalidCharClass
  InvalidEscape
  InvalidNamedCapture
  InvalidRepeatOp
  InvalidRepeatSize
  MissingBracket
  MissingParenthesis
  MissingRepeatArgument
  TrailingBackslash
  UnexpectedParenthesis
}
impl Show for Err

pub type! Error_ {
  Error_(err~ : Err, data~ : @string.StringView)
}
impl Show for Error_

// Type aliases
pub typealias T = Engine

// Traits

